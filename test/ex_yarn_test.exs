defmodule ExYarnTest do
  use ExUnit.Case, async: true

  alias ExYarn.Parser

  doctest Parser

  describe "parse files" do
    no_conflict_tests = [
      {~s(foo:\n  bar\n), %{"foo" => "bar"}}
      # {~s(foo "bar"), %{"foo" => "bar"}},
      # {~s("foo" "bar"), %{"foo" => "bar"}},
      # {~s(foo:\n  bar "bar"), %{"foo" => %{"bar" => "bar"}}},
      # {~s(foo:\n  bar:\n  foo "bar"), %{"foo" => %{"bar" => %{}, "foo" => "bar"}}},
      # {~s(foo:\n  bar:\n    foo "bar"), %{"foo" => %{"bar" => %{"foo" => "bar"}}}},
      # {~s(foo:\r\n  bar:\r\n    foo "bar"), %{"foo" => %{"bar" => %{"foo" => "bar"}}}},
      # {~s(foo:\n  bar:\n    yes no\nbar:\n  yes no),
      #  %{"foo" => %{"bar" => %{"yes" => "no"}}, "bar" => %{"yes" => "no"}}},
      # {~s(foo:\r\n  bar:\r\n    yes no\r\nbar:\r\n  yes no),
      #  %{"foo" => %{"bar" => %{"yes" => "no"}}, "bar" => %{"yes" => "no"}}}
    ]

    Enum.each(no_conflict_tests, fn {input, result} ->
      @input input
      @result result

      @tag debug: true
      test "#{input}" do
        {:ok, {result, _}} = Parser.parse(@input)
        assert @result == result
      end
    end)
  end

  test "parses comments correctly" do
    input = """
    # THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
    # yarn lockfile v1

    "foo":
      bar foo
    """

    expected_result = {
      %{"foo" => %{"bar" => "foo"}},
      [" THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.", " yarn lockfile v1"]
    }

    {:ok, result} = Parser.parse(input)

    assert expected_result == result
  end

  test "parses booleans correctly" do
    input = """
    foo:
      bar true
      foo false
    """

    expected_result = %{"foo" => %{"bar" => true, "foo" => false}}

    {:ok, {result, _}} = Parser.parse(input)
    assert expected_result == result
  end

  test "parses integers correctly" do
    input = """
    foo:
      bar 10
    """

    expected_result = %{"foo" => %{"bar" => 10}}

    {:ok, {result, _}} = Parser.parse(input)
    assert expected_result == result
  end
end
